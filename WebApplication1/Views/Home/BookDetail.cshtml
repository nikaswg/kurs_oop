@{
    ViewData["Title"] = "Детали книги";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        :root {
            --primary-color: #6a11cb;
            --secondary-color: #2575fc;
            --accent-color: #f39c12;
            --text-color: #2c3e50;
            --light-gray: #f5f7fa;
            --medium-gray: #c3cfe2;
            --dark-gray: #7f8c8d;
            --success-color: #2ecc71;
            --warning-color: #e74c3c;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--light-gray) 0%, var(--medium-gray) 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            color: var(--text-color);
            line-height: 1.6;
            overflow-x: hidden;
        }

        .book-detail-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
            animation: fadeIn 1s ease-out;
        }

        .book-header {
            display: flex;
            gap: 40px;
            margin-bottom: 40px;
            flex-wrap: wrap;
            align-items: flex-start;
        }

        .book-cover-container {
            flex: 1;
            margin-top: 79px;
            min-width: 300px;
            position: relative;
            perspective: 1000px;
            animation: slideInLeft 0.8s ease-out;
        }

        .book-cover {
            width: 100%;
            max-width: 400px;
            height: auto;
            border-radius: 10px;
            box-shadow: 0 15px 30px rgba(0,0,0,0.2);
            transform-style: preserve-3d;
            transition: all 0.5s ease;
            transform: rotateY(0deg) scale(1);
            border: 5px solid white;
        }

            .book-cover:hover {
                transform: rotateY(10deg) scale(1.03);
                box-shadow: 0 20px 40px rgba(0,0,0,0.3);
            }

        .book-info {
            flex: 2;
            min-width: 300px;
            animation: slideInRight 0.8s ease-out 0.2s both;
        }

        .book-title {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: var(--text-color);
            font-weight: 700;
            position: relative;
            display: inline-block;
        }

            .book-title::after {
                content: '';
                position: absolute;
                bottom: -5px;
                left: 0;
                width: 100%;
                height: 3px;
                background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                transform: scaleX(0);
                transform-origin: left;
                transition: transform 0.5s ease;
            }

            .book-title:hover::after {
                transform: scaleX(1);
            }

        .book-author {
            font-size: 1.5rem;
            color: var(--dark-gray);
            margin-bottom: 20px;
            font-weight: 500;
            transition: color 0.3s ease;
        }

            .book-author:hover {
                color: var(--primary-color);
            }

        .book-meta {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .meta-item {
            background: rgba(255,255,255,0.7);
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.05);
        }

            .meta-item:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 15px rgba(0,0,0,0.1);
                background: white;
            }

        .meta-label {
            font-weight: bold;
            color: var(--primary-color);
        }

        .book-actions {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .action-btn {
            padding: 12px 25px;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-weight: bold;
            font-size: 1rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }

            .action-btn::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(rgba(255,255,255,0.2), rgba(255,255,255,0));
                opacity: 0;
                transition: opacity 0.3s ease;
            }

            .action-btn:hover::after {
                opacity: 1;
            }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
        }

        .btn-secondary {
            background: white;
            color: var(--text-color);
            border: 1px solid var(--medium-gray);
        }

            .btn-secondary:hover {
                border-color: var(--primary-color);
            }

        .btn-accent {
            background: var(--accent-color);
            color: white;
        }

        .action-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.15);
        }

        .action-btn:active {
            transform: translateY(1px);
        }

        .book-description {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0,0,0,0.05);
            margin-bottom: 40px;
            transition: box-shadow 0.3s ease;
        }

            .book-description:hover {
                box-shadow: 0 15px 30px rgba(0,0,0,0.1);
            }

        .description-toggle {
            background: none;
            border: none;
            color: var(--secondary-color);
            font-weight: bold;
            cursor: pointer;
            padding: 5px 0;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: color 0.3s ease;
        }

            .description-toggle:hover {
                color: var(--primary-color);
            }

        .description-text {
            max-height: 200px;
            overflow: hidden;
            transition: max-height 0.5s ease;
            position: relative;
        }

            .description-text.collapsed {
                max-height: 60px;
            }

                .description-text.collapsed::after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    height: 30px;
                    background: linear-gradient(to bottom, rgba(255,255,255,0), white);
                }

        .book-details {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .detail-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            border-left: 4px solid var(--primary-color);
        }

            .detail-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            }

            .detail-card:nth-child(2) {
                border-left-color: var(--secondary-color);
            }

            .detail-card:nth-child(3) {
                border-left-color: var(--accent-color);
            }

            .detail-card:nth-child(4) {
                border-left-color: var(--success-color);
            }

        .detail-title {
            font-size: 0.9rem;
            color: var(--dark-gray);
            margin-bottom: 10px;
        }

        .detail-value {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .similar-books {
            margin-top: 50px;
            animation: fadeInUp 0.8s ease-out 0.4s both;
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 30px;
            position: relative;
            padding-bottom: 10px;
        }

            .section-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 60px;
                height: 4px;
                background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                border-radius: 2px;
                transition: width 0.5s ease;
            }

            .section-title:hover::after {
                width: 120px;
            }

        /* Анимации */
        @@keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        @@keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-50px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @@keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(50px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Эффект пульсации для кнопок */
        @@keyframes pulse {
            0% {
                transform: scale(1);
                box-shadow: 0 0 0 0 rgba(106, 17, 203, 0.4);
            }

            70% {
                transform: scale(1.05);
                box-shadow: 0 0 0 10px rgba(106, 17, 203, 0);
            }

            100% {
                transform: scale(1);
                box-shadow: 0 0 0 0 rgba(106, 17, 203, 0);
            }
        }

        .pulse-animation {
            animation: pulse 2s infinite;
        }

        /* Эффект волны при нажатии */
        .wave-effect {
            position: relative;
            overflow: hidden;
        }

            .wave-effect:after {
                content: "";
                display: block;
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                pointer-events: none;
                background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
                background-repeat: no-repeat;
                background-position: 50%;
                transform: scale(10,10);
                opacity: 0;
                transition: transform .5s, opacity 1s;
            }

            .wave-effect:active:after {
                transform: scale(0,0);
                opacity: .3;
                transition: 0s;
            }

        /* Медиазапросы */
        @@media (max-width: 768px) {
            .book-header {
                flex-direction: column;
            }

            .book-title {
                font-size: 2rem;
            }

            .book-author {
                font-size: 1.2rem;
            }

            .book-cover-container, .book-info {
                animation: none;
            }

            .book-details {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="book-detail-container">
        <div class="book-header">
            <div class="book-cover-container">
                <img src="@Model.Image" alt="Обложка книги @Model.Book_Name" class="book-cover" />
            </div>

            <div class="book-info">
                <h1 class="book-title">@Model.Book_Name</h1>
                <h2 class="book-author">@Model.Book_Author</h2>

                <div class="book-meta">
                    <div class="meta-item">
                        <span class="meta-label">ISBN:</span> @Model.ISBN
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Дата публикации:</span>
                        @(Model.Publication_Date?.ToString("dd.MM.yyyy") ?? "Не указана")
                    </div>
                    <div class="meta-item">
                        <span class="meta-label">Страниц:</span> @Model.Number_Of_Pages
                    </div>
                </div>

                <div class="book-actions">
                    <button class="action-btn btn-primary">
                        <i class="fas fa-book-open"></i> Читать онлайн
                    </button>
                    <button class="action-btn btn-secondary">
                        <i class="fas fa-bookmark"></i> В избранное
                    </button>
                    <button class="action-btn btn-secondary">
                        <i class="fas fa-calendar-check"></i> Забронировать
                    </button>
                    <button class="action-btn btn-accent">
                        <i class="fas fa-file-alt"></i> Краткое описание
                    </button>
                </div>

                <div class="book-description">
                    <button class="description-toggle" id="toggleDescription">
                        <i class="fas fa-chevron-down" id="toggleIcon"></i> Описание книги
                    </button>
                    <div class="description-text collapsed" id="descriptionText">
                        @Model.Book_Description
                    </div>
                </div>
            </div>
        </div>

        <div class="book-details">
            <div class="detail-card">
                <div class="detail-title">ISBN</div>
                <div class="detail-value">@Model.ISBN</div>
            </div>
            <div class="detail-card">
                <div class="detail-title">Дата публикации</div>
                <div class="detail-value">@(Model.Publication_Date?.ToString("dd.MM.yyyy") ?? "Не указана")</div>
            </div>
            <div class="detail-card">
                <div class="detail-title">Количество страниц</div>
                <div class="detail-value">@Model.Number_Of_Pages</div>
            </div>
            <div class="detail-card">
                <div class="detail-title">Язык</div>
                <div class="detail-value">Русский</div>
            </div>
        </div>

        <div class="similar-books">
            <h3 class="section-title">Похожие книги</h3>
            <!-- Здесь можно добавить блок с похожими книгами -->
        </div>
    </div>

    <!-- Подключаем Font Awesome для иконок -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <script>
        // Обработчик кнопки "Краткое описание"
        document.getElementById('toggleDescription').addEventListener('click', function() {
            const descText = document.getElementById('descriptionText');
            const toggleIcon = document.getElementById('toggleIcon');

            descText.classList.toggle('collapsed');

            if (descText.classList.contains('collapsed')) {
                toggleIcon.className = 'fas fa-chevron-down';
            } else {
                toggleIcon.className = 'fas fa-chevron-up';
            }
        });

        // Обработчики для кнопок действий
        document.querySelectorAll('.action-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Анимация нажатия
                this.style.transform = 'translateY(1px)';
                setTimeout(() => {
                    this.style.transform = 'translateY(-3px)';
                }, 100);

                // Здесь можно добавить логику для каждой кнопки
                const btnText = this.textContent.trim();
                alert(`Вы выбрали: ${btnText}`);
            });
        });
    </script>
</body>
</html>